Java Collections

Vintage Guitars
Why do you need collections Regardless of what you are sorting, searching, or categorizing the steps(algorithm) are always the same.

Collections from the java standard library:
ArrayList
LinkedList
Vector
Stack
SortedMap
HashMap
TreeMap
PriorityQueue
ArrayQueue
HashSet
LinkedHashSet
TreeSet

ArrayList

A representation of an array that can change sizes
can be thought of as a wrapper around an array. that can change size
Element must be an object ( can add primitives through autoboxing)
Elements must be of the same type
ArrayList handle data a little different from arrays. they have methods that handle common operations

.size - returns the number of elements in the array
.add - add an element to the collection (optionally) at a specified index
.get - return the element at the specified index
.indexOf - return the first found index of the given item, or -1 if not found
.contains - check if a collection contains a given element
.lastIndexOf - find the last index of the given element, -1 if not found
.isEmpty - check if the list is empty
.remove - remove the first occurance of an item, or an item at a given index

ArrayList Demo
Notes
Use angle brackets to specify type <>
Specify class integer instead primitive int
the add method is overloaded
ArrayList use method "size()" instead of property length

HashMap

a hashmap is a data structure for key-value pairs
very fast access to elements because the key goes straight to the element
All of the keys in the hashmap must be of the same type
all of the values must be the same type
the keys and the values do not have to be the same type

.put - set a key-value pair
.get - return the value associated with the given key, or null
.getOrDefault - like .get but with a defined value instead of null
.containsKey- check if a key exists in the map
.containsValue - check if a value exists in the map
.putIfAbsent - only set a key-value pair if it does not exist
.remove - remove a key-value pair from the map
.replace - replace a value at a given key
.clear - empty the map
.isEmpty - check if the map is empty

HashMap Demo
Notes
Like ArrayList, we must define the type of the key and value when the hash map is created
Hashmap has a pretty print